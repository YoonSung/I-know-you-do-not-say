<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gaongil</groupId>
	<artifactId>SafeReturnHome</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<org.springframework.version>4.1.0.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.2.0.RELEASE</org.springframework.security.version>
		<tomcat.version>8.0.21</tomcat.version>

		<!-- Database Setting -->

		<!-- migration information, TODO extract setting.properties -->
		<database.url>jdbc:h2:tcp://localhost/~/gaongil</database.url>
		<database.username>yoon</database.username>
		<database.password></database.password>

		<!-- h2 -->
		<database.groupId>com.h2database</database.groupId>
		<database.artifactId>h2</database.artifactId>
		<database.version>1.4.181</database.version>

		<!-- mysql -->
		<!--
		<database.groupId>mysql</database.groupId>
		<database.artifactId>mysql-connector-java</database.artifactId>
		<database.version>5.1.33</database.version>
		-->
	</properties>


	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>${database.groupId}</groupId>
			<artifactId>${database.artifactId}</artifactId>
			<version>${database.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.4.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>

		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.2.Final</version>
		</dependency>

		<!-- Validation Test -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
			<version>2.2.4</version>
		</dependency>

		<!-- GCMServer Connection -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-core</artifactId>
			<version>4.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-tcp</artifactId>
			<version>4.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- Embeded Tomcat -->
		<!-- ref : http://www.slipp.net/wiki/pages/viewpage.action?pageId=16711743 
			ref : http://slipp.net/questions/208 -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-logging-juli</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jasper</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jasper-el</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jsp-api</artifactId>
			<version>${tomcat.version}</version>
		</dependency>

		<!-- JPA Provider -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.7.Final</version>
		</dependency>

		<!-- Spring Data JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.7.1.RELEASE</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>

		<!-- JSON View Resolver -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.3.0</version>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<!-- Basic Scan -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<!-- Additaional Scan -->
			<resource>
				<directory>src/main/resources-${environment}</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- Directory Change -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<warSourceDirectory>webapp</warSourceDirectory>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>

				<!-- War Path
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<wtpversion>2.0</wtpversion>
						<wtpContextName>/</wtpContextName>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>
				-->

				<!-- Compiler Setting -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>utf-8</encoding>
					</configuration>
				</plugin>

				<!-- Maven basic phase exclude-->
				<!-- Exclude intergration-test from normal test phase of Maven -->
				<!-- "mvn test" not execute src/test/acceptance_test package -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<excludes>
							<exclude>**/acceptance_test/*</exclude>
						</excludes>
					</configuration>
				</plugin>

				<!--DB migration -->
				<!--
					<Usage>
					 - compile flyway:init
					 - compile flyway:info
					 - compile flyway:migrate
				-->
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>3.2.1</version>
					<configuration>
						<url>${database.url}</url>
						<userId>${database.username}</userId>
						<password>${database.password}</password>
						<locations>
							<location>filesystem:sql/migration</location>
						</locations>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>${database.groupId}</groupId>
							<artifactId>${database.artifactId}</artifactId>
							<version>${database.version}</version>
						</dependency>
					</dependencies>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>development</id>
			<properties>
				<environment>development</environment>
			</properties>
		</profile>

		<profile>
			<id>release</id>
			<properties>
				<environment>release</environment>
			</properties>
		</profile>

		<!--[startServer Exec:Java] -->
		<!-- Execution by mvn exec:java -->

		<profile>
			<!-- Generate SQL from Entity Class.  -->
			<!-- command  -> mvn exec:java -PsqlGenerate -->
			<id>sqlGenerate</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>

						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<mainClass>gaongil.support.db.export.JPASchemaGenerator</mainClass>
							<arguments>
								<argument>gaongil.domain</argument>
								<!--<argument>${project.basedir}/src/main/resources-${environment}/sql/export/</argument>-->
								<argument>${project.basedir}/sql/export/</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Intergration-test from Test Tomcat Server -->
			<id>intergrationTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>

						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<mainClass>acceptance_test.launcher.IntergrationTestLauncher</mainClass>
							<classpathScope>test</classpathScope>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--[end Exec:Java] -->
	</profiles>

</project>